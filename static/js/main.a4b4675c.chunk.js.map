{"version":3,"sources":["components/Header.js","components/Body.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","toggleNav","bind","this","setState","Navbar","dark","expand","color","fixed","NavbarToggler","onClick","NavbarBrand","className","href","src","alt","id","Collapse","isOpen","navbar","Nav","NavItem","NavLink","to","Button","outline","type","Component","Body","placeholder","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a4b4675c.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport {Navbar,NavbarBrand,NavItem,NavbarToggler,Collapse,NavLink,Nav,Button} from 'reactstrap';\n\nclass Header extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isNavOpen: false,\n    };\n    this.toggleNav=this.toggleNav.bind(this);\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n\n    });\n  }\n  render(){\n    return(\n      <Navbar dark expand=\"sm\" color=\"dark\" fixed=\"top\">\n        \n            <NavbarToggler onClick={this.toggleNav} />\n            <NavbarBrand className=\"ml-20\" href=\"/home\"><img src=\"#\" alt=\"\"/><span className=\"fa fa-lg fa-image\"></span><strong id=\"jobpro\">&nbsp;Job Pro</strong></NavbarBrand>\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar className=\"ml-auto\">\n                <NavItem className=\"ml-4\">\n                  <NavLink className=\"nav-link\"  to='/home'>Home</NavLink>\n                </NavItem>\n                <NavItem className=\"ml-4\">\n                  <NavLink className=\"nav-link\" to='/lists'>Listing</NavLink>\n                </NavItem>\n                <NavItem className=\"ml-4\">\n                  <NavLink className=\"nav-link\" to='/candidates'>Candidates</NavLink>\n                </NavItem>\n                <NavItem className=\"ml-4\">\n                  <NavLink className=\"nav-link\" to='/blog'>Blog</NavLink>\n                </NavItem>\n                <NavItem className=\"ml-4\">\n                  <NavLink className=\"nav-link\" to='/contact'>Contact</NavLink>\n                </NavItem>\n                <NavItem className=\"ml-4\">\n                <NavLink className=\"nav-link\" to='/contact'><span className=\"fa fa-search\"></span></NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n        <Nav navbar className=\"ml-4\">\n          <NavItem>\n            <Button outline type=\"button\" color=\"success\">Sign Up</Button>\n          </NavItem>\n          <NavItem className=\"ml-2\">\n            <Button outline type=\"button\" color=\"primary\">Login</Button>\n          </NavItem>\n        </Nav>\n        <hr></hr>\n        </Navbar>\n    );\n  }\n}\nexport default Header;","import React,{Component} from 'react';\nimport {ButtonDropdown,DropdownToggle,DropdownMenu,DropdownItem,Button} from 'reactstrap';\n\nclass Body extends Component{\n\n  render(){\n    return(\n      <div className=\"app\">\n        <div className=\"body\">\n          <div className=\"container\">\n            <div className=\"row row-head\">\n              <div className=\"col-12\">\n                <p id=\"browse\">3,000+ <i id=\"number\">Browse Jobs</i></p>\n                <p>Find Jobs, Employment & Career Oppurtunities</p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-8\">\n                <div className=\"rectangle\">\n                  <input className=\"search\" type=\"search\" placeholder=\"Search for Jobs, Tags, Description\" />\n                  <ButtonDropdown className=\"location\" color=\"danger\">\n                    <DropdownToggle caret color=\"danger\">\n                      Select Location\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      <DropdownItem>\n                        Something\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </ButtonDropdown>\n                  <Button color=\"danger\" className=\"searchbtn\">Search</Button>\n                </div>\n                <p id=\"keys\"><span className=\"fa fa-tags\"><strong>Trending Keywords : &nbsp;</strong>ui designer, developer, senior, it company, design, call center</span></p>\n              </div>\n              <div className=\"col-4\">\n                <div className=\"rectangle4\">\n                  <div className=\"row\">\n                    <h4 id=\"update\">&gt;Recent Updates</h4>\n                    <hr/>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> \n          <div className=\"rectangle1\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-2 foo\">\n                  <span className=\"fa fa-lg fa-spinner ml-3\"></span>\n                  <h5>Developer</h5>\n                </div>\n                <div className=\"col-2 foo\">\n                  <span className=\"fa fa-lg fa-desktop ml-4\"></span>\n                  <h5>Technology</h5>\n                </div>\n                <div className=\"col-2 foo\">\n                  <span className=\"fa fa-lg fa-balance-scale ml-4\"></span>\n                  <h5>Accounting</h5>\n                </div>\n                <div className=\"col-2 foo\">\n                  <span className=\"fa fa-lg fa-building ml-5\"></span>\n                  <h5>Government</h5>\n                </div>\n                <div className=\"col-2 foo\">\n                  <span className=\"fa fa-lg fa-ambulance ml-3\"></span>\n                  <h5>Medical</h5>\n                </div>\n                <div className=\"col-2 foo\">\n                  <span className=\"fa fa-lg fa-briefcase ml-4\"></span>\n                  <h5>All Jobs</h5>\n                </div>\n              </div>\n            </div>\n          </div> \n        </div>\n        \n        <footer>\n          <div className=\"rectangle3\">\n            <div className=\"rectangle2\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-3 trend\">\n                    <div className=\"margins\">\n                      <h3>TRENDING JOBS</h3>\n                    </div>\n                  </div>\n                  <div className=\"col-3 jobs2\">\n                    <div className=\"margins\">\n                      <h5>Graphics Designer (UI/UX)</h5>\n                    </div>\n                  </div>\n                  <div className=\"col-3 jobs\">\n                    <div className=\"margins\">\n                      <h5>Graphics Designer (UI/UX)</h5>\n                    </div>\n                  </div>\n                  <div className=\"col-3 jobs2\">\n                    <div className=\"margins\">\n                      <h5>Graphics Designer (UI/UX)</h5>  \n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>     \n        </footer>\n      </div>\n    );\n  }\n}\nexport default Body;","import React,{Component} from 'react';\nimport Header from './Header';\nimport Body from './Body';\n\nclass Main extends Component{\n  render(){\n    return(\n      <div>\n        <Header/>\n        <Body/>\n      </div>\n    );\n  }\n}\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}